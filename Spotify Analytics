# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL. 

-- Who are the top 10 artists with the most danceable songs on average? 

SELECT
          artist_name
        , avg(danceability) as avg_danceability

FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY avg_danceability DESC
LIMIT 10


-- Who are the top 10 artists based on popularity?

SELECT
          artist_name
        , avg(popularity) as avg_popularity

FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY avg_popularity DESC
LIMIT 10


-- What artist released the longest song?

SELECT artist_name
FROM BIT_DB.Spotifydata
WHERE duration_ms = (SELECT max(duration_ms) FROM BIT_DB.Spotifydata)


-- What's the average danceability for the 10 most popular songs?

SELECT avg(danceability)
FROM (SELECT * FROM Spotifydata ORDER BY popularity DESC LIMIT 10) as top_songs; 
